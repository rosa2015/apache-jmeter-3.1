<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.1" jmeter="3.1 r1770033">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="下单并完成订单" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="超市下单" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1496806745000</longProp>
        <longProp name="ThreadGroup.end_time">1496806745000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="事务控制器" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="线上变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="url" elementType="Argument">
                <stringProp name="Argument.name">url</stringProp>
                <stringProp name="Argument.value">passport.ccoop.cn</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="username" elementType="Argument">
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">csrosa</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="password" elementType="Argument">
                <stringProp name="Argument.name">password</stringProp>
                <stringProp name="Argument.value">qazwsx</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">qazwsx</stringProp>
              </elementProp>
              <elementProp name="returnurl" elementType="Argument">
                <stringProp name="Argument.name">returnurl</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="rememberMe" elementType="Argument">
                <stringProp name="Argument.name">rememberMe</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="超市登录" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="username" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">${username}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">username</stringProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">${password}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                </elementProp>
                <elementProp name="returnurl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">${returnurl}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">returnurl</stringProp>
                </elementProp>
                <elementProp name="rememberMe" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">${rememberMe}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">rememberMe</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">passport.ccoop.cn</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/account/login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="0"></stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">2</stringProp>
        </LoopController>
        <hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="filename">D:\apache-jmeter-3.1\datas\GoodsId.dat</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="variableNames">GoodsId</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
            </CSVDataSet>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器-加入购物车" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">cs.ccoop.cn</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:43.0) Gecko/20100101 Firefox/43.0 </stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/* </stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate </stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Cookie</stringProp>
                  <stringProp name="Header.value">gr_user_id=5afc0ffc-e9f3-4492-a2d9-fb28233f02ec; zhtxcslogintime=hLZz4yP951Q%3d; Hm_lvt_e9cefc171306e1e1adfd7c65dfa893d3=1495615710,1495615725,1495615749,1495616772; gr_session_id_96df24f07db1c09e=d49bdf5b-585a-40d5-a86b-23ba56b51b3d; zhtxnewcs=tGvqHG0aKwlhjUsOSdB+SfekUbXVzhS/RX7yJRaX1FxQkjIPfKMGLbRTSh8k8lRO7+uj4hduIA0jCcj2ejNsFA==; Hm_lpvt_e9cefc171306e1e1adfd7c65dfa893d3=1495616772; zhtxgosproject=lMJowmXT6GcF9AfBKJZCfDlQkYH8GeA44Ih8MJBc5bO0YQ1EyJQyihdMFOHUGZ9qy1o0oZXLIVZgHIY5EAfCKmjBQTgYuFPxvOIb2K6xq31x0eyG31yr3eOzN9%2bLG25Z66Kb6%2bMdGqKVAHyIO5R7RZn3qylFc1X0LT0VzVoyhN6HYfYdhIClCmD45ENlfLEgQsMq7v%2bGBACRVa4mM3LoRJ2t12rjqFi14%2fS8jj%2btdYjzDNmXix3kAbKI9eh3AvphcmNu63JC6CztVt0SUSop%2b3sURtWcUlIKmDH6D9B4KcgTsuyoU4nbPw1ZR1m3TDsptnS%2fKTA4ryazxS1vvk1zqR9j6Qb21FqiYyU1qbtF67M7XxclD9qBEXzTOLcE%2fRUMTeY8ZSbUNqnJnASmSDEs1TT34SPn1Zax%2fdMbCh4e5X8RfMnVPe2nNXj06lpIVpRsLaUjtkAHsizgZwb1O4dANfnblqIjPm%2b0I5stKF4G2AmEF%2b8JF0LoptCVSOkKzjZ0o%2fXdorH8QDGkmDDMahtG0tKq%2fXEvcUFT7MMwQ3BRmha1yzvKQzX8hPx7OGMw3H6hxypbq59%2f%2bBZD1W31gctlp63hKP1il3CeoL5FLFl0Hzx8FMAfB0tBBLgt%2fQ2ecN8vCGbB8TihmPpLKInHB2QH%2bYn39CLy2OwR08IZgi2Jk4ehp9vZRvitxdMz5Fq3dXNndO6YhWbiUNsnz%2b6R7qa4H3HB2jaMsgOUiq2FDMoDzkm%2fTMN%2bMFxxtd5iokwsR9JLrT%2fXEXFd1i0meLiYGF8lAOs%2bbAfKKdV0cOg2Czm87ckV1FmHV%2fG77s%2f8yGjLU3T8d9AYv%2bl0RLq38r6EI0hCOHuZ3IdnOd5xFYYDVMlfGODcgrIQbOyDmCyf0yZnRjVrmkpIvIHxWizx%2bCX3BI67IKqi%2fa4R0o%2f2PI7NUviwp3VycV1svN7yAbtNKWJXWolf32bCghCw%2fV4%3d; IsFirstLoad=zQ%3d%3d </stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest </stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://cs.ccoop.cn/home/index</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="商品加入购物车" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="GoodsId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">${GoodsId}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">GoodsId</stringProp>
                  </elementProp>
                  <elementProp name="ShopId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">53431</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">ShopId</stringProp>
                  </elementProp>
                  <elementProp name="count" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">count</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">cs.ccoop.cn</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/Home/AddCart</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="862027807">showPurCount</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器--确认订单" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">order.zhanghetianxia.com</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:43.0) Gecko/20100101 Firefox/43.0 </stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate </stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Cookie</stringProp>
                  <stringProp name="Header.value">gr_user_id=b8abc380-3fe6-4b75-bb6e-9272a08fe16c; zhtxghslogintime=hLZz4yP941M%3d; JSESSIONID=B81884918451191955DD91AB22D5FF25; gr_session_id_96df24f07db1c09e=37f70eaa-f163-4301-a704-232a94dd3899; pc:browserecord:876326=h9kwqmCZkwMMuk21LM4JMnUS5vavafBJ4tAUaucMpMfw; zhtxnewcs=tGvqHG0aKwlhjUsOSdB+SfekUbXVzhS/RX7yJRaX1FxQkjIPfKMGLbRTSh8k8lRO7+uj4hduIA0jCcj2ejNsFA==; zhtxgosproject=lMJowmXT6GcF9AfBKJZCfDlQkYH8GeA44Ih8MJBc5bO0YQ1EyJQyihdMFOHUGZ9qy1o0oZXLIVZgHIY5EAfCKmjBQTgYuFPxvOIb2K6xq31x0eyG31yr3eOzN9%2bLG25Z66Kb6%2bMdGqKVAHyIO5R7RZn3qylFc1X0LT0VzVoyhN6HYfYdhIClCmD45ENlfLEgQsMq7v%2bGBACRVa4mM3LoRJ2t12rjqFi14%2fS8jj%2btdYjzDNmXix3kAbKI9eh3AvphcmNu63JC6CztVt0SUSop%2b3sURtWcUlIKmDH6D9B4KcgTsuyoU4nbPw1ZR1m3TDsptnS%2fKTA4ryazxS1vvk1zqR9j6Qb21FqiYyU1qbtF67M7XxclD9qBEXzTOLcE%2fRUMTeY8ZSbUNqnJnASmSDEs1TT34SPn1Zax%2fdMbCh4e5X8RfMnVPe2nNXj06lpIVpRsLaUjtkAHsizgZwb1O4dANfnblqIjPm%2b0I5stKF4G2AmEF%2b8JF0LoptCVSOkKzjZ0o%2fXdorH8QDGkmDDMahtG0tKq%2fXEvcUFT7MMwQ3BRmha1yzvKQzX8hPx7OGMw3H6hxypbq59%2f%2bBZD1W31gctlp63hKP1il3CeoL5FLFl0Hzx8FMAfB0tBBLgt%2fQ2ecN8vCGbB8TihmPpLKInHB2QH%2bYn39CLy2OwR08IZgi2Jk4ehp9vZRvitxdMz5Fq3dXNndO6YhWbiUNsnz%2b6R7qa4H3HB2jaMsgOUiq2FDMoDzkm%2fTMN%2bMFxxtd5iokwsR9JLrT%2fXEXFd1i0meLiYGF8lAOs%2bbAfKKdV0cOg2Czm87ckV1FmHV%2fG77s%2f8yGjLU3T8d9AYv%2bl0RLq38r6EI0hCOHuZ3IdnOd5xFYYDVMlfGODcgrIQbOyDmCyf0yZnRjVrmkpIvIHxWizx%2bCX3BI67IKqi%2fa4R0o%2f2PI7NUviwp3VycV1svN7yAbtNKWJXWolf32bCghCw%2fV4%3d </stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded </stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest </stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://order.zhanghetianxia.com/cart/stockorder </stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="filename">D:\apache-jmeter-3.1\datas\GoodsId.dat</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="variableNames">GoodsId</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
            </CSVDataSet>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="确认订单" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="goodids" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${GoodsId}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">goodids</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">order.zhanghetianxia.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/cart/confirmorder</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="线上支付" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器--支付" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">order.zhanghetianxia.com</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:43.0) Gecko/20100101 Firefox/43.0 </stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate </stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://order.zhanghetianxia.com/cart/confirmorder</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Cookie</stringProp>
                  <stringProp name="Header.value">gr_user_id=bb2cc682-be69-4359-801d-9a5823b13274; zhtxghslogintime=hLZz4yP941M%3d; JSESSIONID=4F8C21FC532DB2110561E6E2150DA145; zhtxsptproject=lMJowmXT6GcF9AfBKJZCfDlQkYH8GeA44Ih8MJBc5bO0YQ1EyJQyihdMFOHUGZ9qy1oOoJXLIVZgHIY5EAfCKmjBQTgYuFP9vtwX8aeyonhw%2b8H6um6Qxu%2bZAPDGPixG47j%2b5cIuV%2fWIZXqYO7gjdomx4C9welLiEx0illUQrNnQYLcct4L%2bDDn%2bm3ZxW9MUfqIb5JGMDjibLpFHF0bQSMyR4zXSz1qmiYWPiyWcXP3wJvClijvvJ7j369YCHNlxQG1w7WY0vxn7ddw4ABVI8UkEcpX%2fYFEKrmjoTaZlEL0O5MHZLqzeZxpFRUKdYA8MomG6HBohkEbR1zwVrhRBrRY1hjfHxF%2bzWhlOu%2bxH94UDXXYoHqGSV3TJFaVZyHNaY5E%2fXyTwPNSRhBeGO1RE3DWM6w6ku6jZgdY9CX8Ly04PN63hRuKiG03duEIMP7oLIvppv35C4RGQLQfZG6sWUt7unZIGOROraOMOBkIzxnj5XcxrDVXSuMi0G%2bsN1V1%2fi9e%2bi%2brxYU2wqjr%2bexZk%2bNiSgHwJW1xdh%2bwiMEEjgzDvxS%2f6Vjb73MxmMEM%2fnVu85lhYoKx5hyprjmnggdpy%2bKzoC8Yq0WS%2fm4N4DFNXa0JXLcQvNnpiCbYp5hTmP7k%2bMXWhqSCaqeYRCo72EVMV7Lbi0hfy%2fZZlupcpwU%2bhg8TX8%2f7IVPaih7A3t1O%2fCHRsIee2%2bjSJSNch286vwIf5bRDR%2bRH%2bxEfX0L%2bRYsotx2e%2bQqdNRhhUkd4ywnsLb9RB2ya9PlVa9zVdHYO7B2xULIU8ZyrjE7d%2bELgxCQuvmMky0SnRc9zz4oKd2VjsV1v%2bEa48gMRgReeJv4DFIxwdGniV349SYI5TY6EdA7oNIsHD0JQzSM6gtgKOqHd%2fQ0B4wmYshrzbJhPawyH9JKjqHuH1q%2fwDxa%2bSF%2bqxSZnLsgIzDWkegJGgIIAFU3B5fJ1UylHq3BDsvjvOYqvNdQ1xRO9KfjM5F5zvkVyyfJ2%2b94YeVn0MGGgiDr648NL9wWozb4n8qgfuenB%2f8eRqQe97Nk%2b9PLQwbqStOoTEmDmRa1%2f8hJs3yWaKpTjQHpXtKM365948iqgc3VRA5sYz%2fxEyuSk3bT4%3d; ghsnewjava=2SBKL3yAuwJrDuLN8lmvaLcQ3h1ogo0VHqg1A6Y3dY4=; zhtxnewcs=tGvqHG0aKwlhjUsOSdB+SfekUbXVzhS/RX7yJRaX1FxQkjIPfKMGLbRTSh8k8lRO7+uj4hduIA0jCcj2ejNsFA==; zhtxgosproject=lMJowmXT6GcF9AfBKJZCfDlQkYH8GeA44Ih8MJBc5bO0YQ1EyJQyihdMFOHUGZ9qy1o0oZXLIVZgHIY5EAfCKmjBQTgYuFPxvOIb2K6xq31x0eyG31yr3eOzN9%2bLG25Z66Kb6%2bMdGqKVAHyIO5R7RZn3qylFc1X0LT0VzVoyhN6HYfYdhIClCmD45ENlfLEgQsMq7v%2bGBACRVa4mM3LoRJ2t12rjqFi14%2fS8jj%2btdYjzDNmXix3kAbKI9eh3AvphcmNu63JC6CztVt0SUSop%2b3sURtWcUlIKmDH6D9B4KcgTsuyoU4nbPw1ZR1m3TDsptnS%2fKTA4ryazxS1vvk1zqR9i6Qb22lqieyU1qb9M67MjUQR5Oqq2KXafKcMr0X5bRsNbayjuMrS2lAatXFB3%2bij35xmXqvOa4v1dIz8y2mgmKLPlIO3BfX77vF4SIL1fNaYwnhRAtg3Ie2nVPYhvFdCapo9bIXGwTNNzBnM72AnYYd9vF0PHxPzsV%2f84hTEckavpvqHnY1KmiQPTY2JXr%2fSM0nF7S0N9zcxHPSEvuAra0RLhaA%2fBhdN6JDwB7iKw5kwfrIUqjxJ511Thp9IfrqfkOMBil3SOlatGHElnXkJJQYcaQ1VOAI1S0BuCR9oeL3W65Q6Mns4RAZyODXEvw%2b3a0hz73usWx54msxr22snfruDPFem3jbFR%2bnONAEIhIMqOhWjqRckP3ueG%2feT9XATJ%2fBzj0wafra6meL5AuGvOOJNdDnJFmZUko2AgSNVK3A3vDG5Lmyh5H4GWa3x7NI0UGA%2bdD7Yma4cENiiPxJg%2fmS6iVpS5xuuKjXDEJRzXYdYp9cFyR8irgL%2bTPT4AE36l8oUBNv5Kaq4eBqVpKoDHxbI%2bY8CH%2bhCf0yYeVhppwjkxo4iGCgCg2ETqNcikH5GWhJEt9J70GtKtGK3npGZocHc4od%2btHLsGA3geAd4VwUi%2fmX7pvzLcL8%2f%2b; gr_session_id_96df24f07db1c09e=0195f308-d9bf-4fdf-a7e1-a21743a831a3; pc:browserecord:876326=h9kwqmCZkwMMuk21LM4JMnUS5vavaPBJ4tAUaucMqMfw; zhtxsvckey=lMJozXeYwk1W3EakZqwMUw9Wg5b2EYBLvasBbbsbr4PjSHluv7Z9jRxWPqOrButSzX4T782%2fd15cHa05Ng%2fZUgDJQ2s4hhD0wMEepdSJoCsn3%2fqSgViA7%2frEM%2bO0ERRT4Kv739UeB%2f%2fWVWiccZB6YdnQ4C52NFTn; zhtxnewfwz=SB80aqwOtnvUEubvCAPFnA==; zhtxsvcproject=lMJowmXT6GcF9AfBKJZCfDlQkYH8GeA44Ih8MJBc5bO0YQ1EyJQyihdMFOHaP4t0zGAW9pSoKX1uHKg2GAX0LmrFXX0CpB2AxLBD5NW5%2bjkl54z1hFj88%2bSBLJ%2bdNhNI7PvY5cIubeiCUCbAbccsGNnPqFtzehfifngBmk0StfmufOVNpdXHIy7D5HZxW44VfaITmLn9LyyeF7htUXyjbfKF1jPjkGi%2bwt7ciDKnBYuVFfae2FLPf5iD6cJCddpyZkJ5vmwOkBHZEZc4ABVZ%2fVpfYNmoOUsl%2fjPPS8ZuAMsB6PTeGKvjGgVzaErPSj0UpG%2b0KwY%2bvWnUyWgqqCxupTIdqy%2fRqFi6cy4Jt%2f5F3qJ5f2oGG9CkN1DlEIFV%2f3F1f%2b0oDwz8P%2bGQtnHQGzZg4CD30iSC65Oex%2fo%2fX38O%2fkEeG6HxOfOzDl%2fQx1YkJOx6Ato%2frUVE5Drhc1PLGL8UN%2fThkKgbXlmUMdM9JEkz5W77fPtKLkHKvfvvavQw0x4%2bmMjAoZ%2fRcWWrjDikWE1Wy%2f2x3VwtSCBv5v50RlhA8D%2b7ySTrYTjhxP5%2bDjkk8lqPhSMPqZIIoi5l3xfXsvYij5jhG%2fYh0iC5haRDOmhsQlxfQYceQz0kE%2b0g2Q%2b7V7YCFXPH%2bw7Mpc44PInnDWwW7pjZ%2fynfxsl6tMA2jkyohevJkYDMZ56uwMZY0juTSXBNe%2bmr92naQ4dUzaz38qSuTALOjiOMpX6doaW1Sos%2f42KTXZoRNRleltZk21AUXIhV2zqhSFldmDRKe4miBVt7dbdoMCjfZ7V1FuIWI2Of1pglqi6ZLOLfw8vomiDhRVrRW%2fkwuedhS9HWqtG6EzsdDF%2bc0YEAHt5qTfQCCMhbCNnY3bUlb8z3njWOgDIbUz161D0dgryMGhnjwEH4K9zgDK71i40C0%2f72H4jubbXXmVs%2fdUsFq5%2byK7cNAlJAUo1Q13P%2fiH3L4jPgepTKOUshUON1RiwZSpyWwm%2fRPZitsocmblILWkdcd7u1svPcsnlSEKqN9zfQKjtN4%2flFZ%2bgYFnTMB8oGVdiVcLD26TrIIAfShLsRqlDQxl7G; zhtxfwzlogintime=hohv7SCYxxIH%2fA%3d%3d; gr_session_id_a17bcfa1ad5b5eb2=693ecd21-56bb-4791-845c-35d6692ee1fa</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded </stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">555</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交订单-在线支付" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="smId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">825790</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">smId</stringProp>
                  </elementProp>
                  <elementProp name="receive_store" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">rosatestcs</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">receive_store</stringProp>
                  </elementProp>
                  <elementProp name="receive_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">testwang</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">receive_name</stringProp>
                  </elementProp>
                  <elementProp name="phoneno" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">18618486817</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">phoneno</stringProp>
                  </elementProp>
                  <elementProp name="detail_info" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">testaddress</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">detail_info</stringProp>
                  </elementProp>
                  <elementProp name="orders_childs_req" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1+MLBMvauuP0POOS/fmSmEhleP2jJePXfY+NvYEm5Er6Mj+8rm+XXTBtt59IgesbRHfSLGEzfJjbtFYjQJiJB/l6u12Z17VcEzpoC+z5kmqniP2KMq/BPc+oYdJPKYkQ</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">orders_childs_req</stringProp>
                  </elementProp>
                  <elementProp name="goods_info_lists" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">tH+di0n5OB3rN22hanDviBvisTK9z+IkTCLwH74NOLMm6boF+yCkJrccAOshCtVIh8Tik/fRGJ+f45DSS8HvsQ==</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">goods_info_lists</stringProp>
                  </elementProp>
                  <elementProp name="stayTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">16000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">stayTime</stringProp>
                  </elementProp>
                  <elementProp name="pay_way" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pay_way</stringProp>
                  </elementProp>
                  <elementProp name="isActivity" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">isActivity</stringProp>
                  </elementProp>
                  <elementProp name="shop_53431" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">shop_53431</stringProp>
                  </elementProp>
                  <elementProp name="supermarket_coupons_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">supermarket_coupons_id</stringProp>
                  </elementProp>
                  <elementProp name="supermarket_coupons_shopId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">supermarket_coupons_shopId</stringProp>
                  </elementProp>
                  <elementProp name="isUseAccount" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">isUseAccount</stringProp>
                  </elementProp>
                  <elementProp name="account_pay_money" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0.01</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">account_pay_money</stringProp>
                  </elementProp>
                  <elementProp name="red_pay_money" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">red_pay_money</stringProp>
                  </elementProp>
                  <elementProp name="pwd" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">qazwsx123</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pwd</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">order.zhanghetianxia.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/order/submitorder</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">orderNumber</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;span class=&quot;color-blue&quot;&gt; (.*?)&lt;/span&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">${__setProperty(orderNumber,${orderNumber})};
log.info(&quot;${orderNumber}&quot;);</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="769022552">成功支付</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="搜索订单--在线支付" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="cancleId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">cancleId</stringProp>
                  </elementProp>
                  <elementProp name="cancleOrderId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">cancleOrderId</stringProp>
                  </elementProp>
                  <elementProp name="remarks" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">支付遇到问题</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">remarks</stringProp>
                  </elementProp>
                  <elementProp name="recycleSelect" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">recycleSelect</stringProp>
                  </elementProp>
                  <elementProp name="page_index" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">page_index</stringProp>
                  </elementProp>
                  <elementProp name="is_del" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">is_del</stringProp>
                  </elementProp>
                  <elementProp name="is_history" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">is_history</stringProp>
                  </elementProp>
                  <elementProp name="goods_ids" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">goods_ids</stringProp>
                  </elementProp>
                  <elementProp name="goods_counts" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">goods_counts</stringProp>
                  </elementProp>
                  <elementProp name="begin_time_str" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">begin_time_str</stringProp>
                  </elementProp>
                  <elementProp name="begin_time_end_str" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">begin_time_end_str</stringProp>
                  </elementProp>
                  <elementProp name="status" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">-1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">status</stringProp>
                  </elementProp>
                  <elementProp name="search_keyword" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${__property(orderNumber)}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">search_keyword</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">order.zhanghetianxia.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/order/listdo</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">orderid</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;input name=&quot;(.*?)&quot; type=&quot;hidden&quot; value=&quot;1&quot;/&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters">${orderid}</stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">${__setProperty(orderid,${orderid})};
log.info(&quot;${orderid}&quot;);
</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="35034724">订单号</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="线下支付" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器--线下" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">order.zhanghetianxia.com</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:43.0) Gecko/20100101 Firefox/43.0 </stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate </stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://order.zhanghetianxia.com/cart/confirmorder</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Cookie</stringProp>
                  <stringProp name="Header.value">gr_user_id=bb2cc682-be69-4359-801d-9a5823b13274; zhtxghslogintime=hLZz4yP941M%3d; JSESSIONID=4F8C21FC532DB2110561E6E2150DA145; zhtxsptproject=lMJowmXT6GcF9AfBKJZCfDlQkYH8GeA44Ih8MJBc5bO0YQ1EyJQyihdMFOHUGZ9qy1oOoJXLIVZgHIY5EAfCKmjBQTgYuFP9vtwX8aeyonhw%2b8H6um6Qxu%2bZAPDGPixG47j%2b5cIuV%2fWIZXqYO7gjdomx4C9welLiEx0illUQrNnQYLcct4L%2bDDn%2bm3ZxW9MUfqIb5JGMDjibLpFHF0bQSMyR4zXSz1qmiYWPiyWcXP3wJvClijvvJ7j369YCHNlxQG1w7WY0vxn7ddw4ABVI8UkEcpX%2fYFEKrmjoTaZlEL0O5MHZLqzeZxpFRUKdYA8MomG6HBohkEbR1zwVrhRBrRY1hjfHxF%2bzWhlOu%2bxH94UDXXYoHqGSV3TJFaVZyHNaY5E%2fXyTwPNSRhBeGO1RE3DWM6w6ku6jZgdY9CX8Ly04PN63hRuKiG03duEIMP7oLIvppv35C4RGQLQfZG6sWUt7unZIGOROraOMOBkIzxnj5XcxrDVXSuMi0G%2bsN1V1%2fi9e%2bi%2brxYU2wqjr%2bexZk%2bNiSgHwJW1xdh%2bwiMEEjgzDvxS%2f6Vjb73MxmMEM%2fnVu85lhYoKx5hyprjmnggdpy%2bKzoC8Yq0WS%2fm4N4DFNXa0JXLcQvNnpiCbYp5hTmP7k%2bMXWhqSCaqeYRCo72EVMV7Lbi0hfy%2fZZlupcpwU%2bhg8TX8%2f7IVPaih7A3t1O%2fCHRsIee2%2bjSJSNch286vwIf5bRDR%2bRH%2bxEfX0L%2bRYsotx2e%2bQqdNRhhUkd4ywnsLb9RB2ya9PlVa9zVdHYO7B2xULIU8ZyrjE7d%2bELgxCQuvmMky0SnRc9zz4oKd2VjsV1v%2bEa48gMRgReeJv4DFIxwdGniV349SYI5TY6EdA7oNIsHD0JQzSM6gtgKOqHd%2fQ0B4wmYshrzbJhPawyH9JKjqHuH1q%2fwDxa%2bSF%2bqxSZnLsgIzDWkegJGgIIAFU3B5fJ1UylHq3BDsvjvOYqvNdQ1xRO9KfjM5F5zvkVyyfJ2%2b94YeVn0MGGgiDr648NL9wWozb4n8qgfuenB%2f8eRqQe97Nk%2b9PLQwbqStOoTEmDmRa1%2f8hJs3yWaKpTjQHpXtKM365948iqgc3VRA5sYz%2fxEyuSk3bT4%3d; ghsnewjava=2SBKL3yAuwJrDuLN8lmvaLcQ3h1ogo0VHqg1A6Y3dY4=; zhtxnewcs=tGvqHG0aKwlhjUsOSdB+SfekUbXVzhS/RX7yJRaX1FxQkjIPfKMGLbRTSh8k8lRO7+uj4hduIA0jCcj2ejNsFA==; zhtxgosproject=lMJowmXT6GcF9AfBKJZCfDlQkYH8GeA44Ih8MJBc5bO0YQ1EyJQyihdMFOHUGZ9qy1o0oZXLIVZgHIY5EAfCKmjBQTgYuFPxvOIb2K6xq31x0eyG31yr3eOzN9%2bLG25Z66Kb6%2bMdGqKVAHyIO5R7RZn3qylFc1X0LT0VzVoyhN6HYfYdhIClCmD45ENlfLEgQsMq7v%2bGBACRVa4mM3LoRJ2t12rjqFi14%2fS8jj%2btdYjzDNmXix3kAbKI9eh3AvphcmNu63JC6CztVt0SUSop%2b3sURtWcUlIKmDH6D9B4KcgTsuyoU4nbPw1ZR1m3TDsptnS%2fKTA4ryazxS1vvk1zqR9i6Qb22lqieyU1qb9M67MjUQR5Oqq2KXafKcMr0X5bRsNbayjuMrS2lAatXFB3%2bij35xmXqvOa4v1dIz8y2mgmKLPlIO3BfX77vF4SIL1fNaYwnhRAtg3Ie2nVPYhvFdCapo9bIXGwTNNzBnM72AnYYd9vF0PHxPzsV%2f84hTEckavpvqHnY1KmiQPTY2JXr%2fSM0nF7S0N9zcxHPSEvuAra0RLhaA%2fBhdN6JDwB7iKw5kwfrIUqjxJ511Thp9IfrqfkOMBil3SOlatGHElnXkJJQYcaQ1VOAI1S0BuCR9oeL3W65Q6Mns4RAZyODXEvw%2b3a0hz73usWx54msxr22snfruDPFem3jbFR%2bnONAEIhIMqOhWjqRckP3ueG%2feT9XATJ%2fBzj0wafra6meL5AuGvOOJNdDnJFmZUko2AgSNVK3A3vDG5Lmyh5H4GWa3x7NI0UGA%2bdD7Yma4cENiiPxJg%2fmS6iVpS5xuuKjXDEJRzXYdYp9cFyR8irgL%2bTPT4AE36l8oUBNv5Kaq4eBqVpKoDHxbI%2bY8CH%2bhCf0yYeVhppwjkxo4iGCgCg2ETqNcikH5GWhJEt9J70GtKtGK3npGZocHc4od%2btHLsGA3geAd4VwUi%2fmX7pvzLcL8%2f%2b; gr_session_id_96df24f07db1c09e=0195f308-d9bf-4fdf-a7e1-a21743a831a3; pc:browserecord:876326=h9kwqmCZkwMMuk21LM4JMnUS5vavaPBJ4tAUaucMqMfw; zhtxsvckey=lMJozXeYwk1W3EakZqwMUw9Wg5b2EYBLvasBbbsbr4PjSHluv7Z9jRxWPqOrButSzX4T782%2fd15cHa05Ng%2fZUgDJQ2s4hhD0wMEepdSJoCsn3%2fqSgViA7%2frEM%2bO0ERRT4Kv739UeB%2f%2fWVWiccZB6YdnQ4C52NFTn; zhtxnewfwz=SB80aqwOtnvUEubvCAPFnA==; zhtxsvcproject=lMJowmXT6GcF9AfBKJZCfDlQkYH8GeA44Ih8MJBc5bO0YQ1EyJQyihdMFOHaP4t0zGAW9pSoKX1uHKg2GAX0LmrFXX0CpB2AxLBD5NW5%2bjkl54z1hFj88%2bSBLJ%2bdNhNI7PvY5cIubeiCUCbAbccsGNnPqFtzehfifngBmk0StfmufOVNpdXHIy7D5HZxW44VfaITmLn9LyyeF7htUXyjbfKF1jPjkGi%2bwt7ciDKnBYuVFfae2FLPf5iD6cJCddpyZkJ5vmwOkBHZEZc4ABVZ%2fVpfYNmoOUsl%2fjPPS8ZuAMsB6PTeGKvjGgVzaErPSj0UpG%2b0KwY%2bvWnUyWgqqCxupTIdqy%2fRqFi6cy4Jt%2f5F3qJ5f2oGG9CkN1DlEIFV%2f3F1f%2b0oDwz8P%2bGQtnHQGzZg4CD30iSC65Oex%2fo%2fX38O%2fkEeG6HxOfOzDl%2fQx1YkJOx6Ato%2frUVE5Drhc1PLGL8UN%2fThkKgbXlmUMdM9JEkz5W77fPtKLkHKvfvvavQw0x4%2bmMjAoZ%2fRcWWrjDikWE1Wy%2f2x3VwtSCBv5v50RlhA8D%2b7ySTrYTjhxP5%2bDjkk8lqPhSMPqZIIoi5l3xfXsvYij5jhG%2fYh0iC5haRDOmhsQlxfQYceQz0kE%2b0g2Q%2b7V7YCFXPH%2bw7Mpc44PInnDWwW7pjZ%2fynfxsl6tMA2jkyohevJkYDMZ56uwMZY0juTSXBNe%2bmr92naQ4dUzaz38qSuTALOjiOMpX6doaW1Sos%2f42KTXZoRNRleltZk21AUXIhV2zqhSFldmDRKe4miBVt7dbdoMCjfZ7V1FuIWI2Of1pglqi6ZLOLfw8vomiDhRVrRW%2fkwuedhS9HWqtG6EzsdDF%2bc0YEAHt5qTfQCCMhbCNnY3bUlb8z3njWOgDIbUz161D0dgryMGhnjwEH4K9zgDK71i40C0%2f72H4jubbXXmVs%2fdUsFq5%2byK7cNAlJAUo1Q13P%2fiH3L4jPgepTKOUshUON1RiwZSpyWwm%2fRPZitsocmblILWkdcd7u1svPcsnlSEKqN9zfQKjtN4%2flFZ%2bgYFnTMB8oGVdiVcLD26TrIIAfShLsRqlDQxl7G; zhtxfwzlogintime=hohv7SCYxxIH%2fA%3d%3d; gr_session_id_a17bcfa1ad5b5eb2=693ecd21-56bb-4791-845c-35d6692ee1fa</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded </stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">555</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交订单-货到付款" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="smId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">825790</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">smId</stringProp>
                  </elementProp>
                  <elementProp name="receive_store" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">rosatestcs</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">receive_store</stringProp>
                  </elementProp>
                  <elementProp name="receive_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">testwang</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">receive_name</stringProp>
                  </elementProp>
                  <elementProp name="phoneno" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">18618486817</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">phoneno</stringProp>
                  </elementProp>
                  <elementProp name="detail_info" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">testaddress</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">detail_info</stringProp>
                  </elementProp>
                  <elementProp name="orders_childs_req" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1+MLBMvauuP0POOS/fmSmEhleP2jJePXfY+NvYEm5Er6Mj+8rm+XXTBtt59IgesbRHfSLGEzfJjbtFYjQJiJB/l6u12Z17VcEzpoC+z5kmqniP2KMq/BPc+oYdJPKYkQ</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">orders_childs_req</stringProp>
                  </elementProp>
                  <elementProp name="goods_info_lists" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">tH+di0n5OB3rN22hanDviBvisTK9z+IkTCLwH74NOLMxMyWy/mwBl4Sf4IgHqculbED06SUtY5/NnPhi8n2hvQ==</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">goods_info_lists</stringProp>
                  </elementProp>
                  <elementProp name="stayTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">23000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">stayTime</stringProp>
                  </elementProp>
                  <elementProp name="pay_way" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pay_way</stringProp>
                  </elementProp>
                  <elementProp name="isActivity" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">isActivity</stringProp>
                  </elementProp>
                  <elementProp name="shop_53431" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">shop_53431</stringProp>
                  </elementProp>
                  <elementProp name="supermarket_coupons_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">supermarket_coupons_id</stringProp>
                  </elementProp>
                  <elementProp name="supermarket_coupons_shopId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">supermarket_coupons_shopId</stringProp>
                  </elementProp>
                  <elementProp name="isUseAccount" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">isUseAccount</stringProp>
                  </elementProp>
                  <elementProp name="account_pay_money" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">account_pay_money</stringProp>
                  </elementProp>
                  <elementProp name="red_pay_money" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">red_pay_money</stringProp>
                  </elementProp>
                  <elementProp name="pwd" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pwd</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">order.zhanghetianxia.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/order/submitorder</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">orderNumber2</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;span class=&quot;color-blue&quot;&gt; (.*?)&lt;/span&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">${__setProperty(orderNumber2,${orderNumber2})};
log.info(&quot;${orderNumber2}&quot;);</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="769022552">成功支付</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="搜索订单--线下支付" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="cancleId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">cancleId</stringProp>
                  </elementProp>
                  <elementProp name="cancleOrderId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">cancleOrderId</stringProp>
                  </elementProp>
                  <elementProp name="remarks" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">remarks</stringProp>
                  </elementProp>
                  <elementProp name="recycleSelect" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">recycleSelect</stringProp>
                  </elementProp>
                  <elementProp name="page_index" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">page_index</stringProp>
                  </elementProp>
                  <elementProp name="is_del" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">is_del</stringProp>
                  </elementProp>
                  <elementProp name="is_history" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">is_history</stringProp>
                  </elementProp>
                  <elementProp name="goods_ids" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">goods_ids</stringProp>
                  </elementProp>
                  <elementProp name="goods_counts" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">goods_counts</stringProp>
                  </elementProp>
                  <elementProp name="begin_time_str" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">begin_time_str</stringProp>
                  </elementProp>
                  <elementProp name="begin_time_end_str" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">begin_time_end_str</stringProp>
                  </elementProp>
                  <elementProp name="status" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">-1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">status</stringProp>
                  </elementProp>
                  <elementProp name="search_keyword" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${__property(orderNumber2)}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">search_keyword</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">order.zhanghetianxia.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/order/listdo</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">orderid2</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;input name=&quot;(.*?)&quot; type=&quot;hidden&quot; value=&quot;1&quot;/&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">${__setProperty(orderid2,${orderid2})};
log.info(&quot;${orderid2}&quot;);
</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="35034724">订单号</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="事务控制器" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="供货商登录" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="UserName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">ghsrosa</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">UserName</stringProp>
                  </elementProp>
                  <elementProp name="Password" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">qazwsx</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">Password</stringProp>
                  </elementProp>
                  <elementProp name="returnUrl" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">returnUrl</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">ghs.zhanghetianxia.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/Account/LoginAjax</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="115792">uid</stringProp>
                  <stringProp name="-934426595">result</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="线上支付订单发货" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">ghsn.zhanghetianxia.com</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:43.0) Gecko/20100101 Firefox/43.0 </stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/* </stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate </stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://ghs.zhanghetianxia.com/order/list?ignoreTab=1 </stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Cookie</stringProp>
                  <stringProp name="Header.value">gr_user_id=bb2cc682-be69-4359-801d-9a5823b13274; zhtxghslogintime=hLZz4yP941M%3d; JSESSIONID=BCC733E1ACCFE9C52B865B5E174EE860; zhtxsptproject=lMJowmXT6GcF9AfBKJZCfDlQkYH8GeA44Ih8MJBc5bO0YQ1EyJQyihdMFOHUGZ9qy1oOoJXLIVZgHIY5EAfCKmjBQTgYuFP9vtwX8aeyonhw%2b8H6um6Qxu%2bZAPDGPixG47j%2b5cIuV%2fWIZXqYO7gjdomx4C9welLiEx0illUQrNnQYLcct4L%2bDDn%2bm3ZxW9MUfqIb5JGMDjibLpFHF0bQSMyR4zXSz1qmiYWPiyWcXP3wJvClijvvJ7j369YCHNlxQG1w7WY0vxn7ddw4ABVI8UkEcpX%2fYFEKrmjoTaZlEL0O5MHZLqzeZxpFRUKdYA8MomG6HBohkEbR1zwVrhRBrRY1hjfHxF%2bzWhlOu%2bxH94UDXXYoHqGSV3TJFaVZyHNaY5E%2fXyTwPNSRhBeGO1RE3DWM6w6ku6jZgdY9CX8Ly04PN63hRuKiG03duEIMP7oLIvppv35C4RGQLQfZG6sWUt7unZIGOROraOMOBkIzxnj5XcxrDVXSuMi0G%2bsN1V1%2fi9e%2bi%2brxYU2wqjr%2bexZk%2bNiSgHwJW1xdh%2bwiMEEjgzDvxS%2f6Vjb73MxmMEM%2fnVu85lhYoKx5hyprjmnggdpy%2bKzoC8Yq0WS%2fm4N4DFNXa0JXLcQvNnpiCbYp5hTmP7k%2bMXWhqSCaqeYRCo72EVMV7Lbi0hfy%2fZZlupcpwU%2bhg8TX8%2f7IVPaih7A3t1O%2fCHRsIee2%2bjSJSNch286vwIf5bRDR%2bRH%2bxEfX0L%2bRYsotx2e%2bQqdNRhhUkd4ywnsLb9RB2ya9PlVa9zVdHYO7B2xULIU8ZyrjE7d%2bELgxCQuvmMky0SnRc9zz4oKd2VjsV1v%2bEa48gMRgReeJv4DFIxwdGniV349SYI5TY6EdA7oNIsHD0JQzSM6gtgKOqHd%2fQ0B4wmYshrzbJhPawyH9JKjqHuH1q%2fwDxa%2bSF%2bqxSZnLsgIzDWkegJGgIIAFU3B5fJ1UylHq3BDsvjvOYqvNdQ1xRO9KfjM5F5zvkVyyfJ2%2b94YeVn0MGGgiDr648NL9wWozb4n8qgfuenB%2f8eRqQe97Nk%2b9PLQwbqStOoTEmDmRa1%2f8hJs3yWaKpTjQHpXtKM365948iqgc3VRA5sYz%2fxEyuSk3bT4%3d; ghsnewjava=2SBKL3yAuwJrDuLN8lmvaLcQ3h1ogo0VHqg1A6Y3dY4=; zhtxnewcs=tGvqHG0aKwlhjUsOSdB+SfekUbXVzhS/RX7yJRaX1FxQkjIPfKMGLbRTSh8k8lRO7+uj4hduIA0jCcj2ejNsFA==; zhtxgosproject=lMJowmXT6GcF9AfBKJZCfDlQkYH8GeA44Ih8MJBc5bO0YQ1EyJQyihdMFOHUGZ9qy1o0oZXLIVZgHIY5EAfCKmjBQTgYuFPxvOIb2K6xq31x0eyG31yr3eOzN9%2bLG25Z66Kb6%2bMdGqKVAHyIO5R7RZn3qylFc1X0LT0VzVoyhN6HYfYdhIClCmD45ENlfLEgQsMq7v%2bGBACRVa4mM3LoRJ2t12rjqFi14%2fS8jj%2btdYjzDNmXix3kAbKI9eh3AvphcmNu63JC6CztVt0SUSop%2b3sURtWcUlIKmDH6D9B4KcgTsuyoU4nbPw1ZR1m3TDsptnS%2fKTA4ryazxS1vvk1zqR9i6Qb22lqieyU1qb9M67MjUQR5Oqq2KXafKcMr0X5bRsNbayjuMrS2lAatXFB3%2bij35xmXqvOa4v1dIz8y2mgmKLPlIO3BfX77vF4SIL1fNaYwnhRAtg3Ie2nVPYhvFdCapo9bIXGwTNNzBnM72AnYYd9vF0PHxPzsV%2f84hTEckavpvqHnY1KmiQPTY2JXr%2fSM0nF7S0N9zcxHPSEvuAra0RLhaA%2fBhdN6JDwB7iKw5kwfrIUqjxJ511Thp9IfrqfkOMBil3SOlatGHElnXkJJQYcaQ1VOAI1S0BuCR9oeL3W65Q6Mns4RAZyODXEvw%2b3a0hz73usWx54msxr22snfruDPFem3jbFR%2bnONAEIhIMqOhWjqRckP3ueG%2feT9XATJ%2fBzj0wafra6meL5AuGvOOJNdDnJFmZUko2AgSNVK3A3vDG5Lmyh5H4GWa3x7NI0UGA%2bdD7Yma4cENiiPxJg%2fmS6iVpS5xuuKjXDEJRzXYdYp9cFyR8irgL%2bTPT4AE36l8oUBNv5Kaq4eBqVpKoDHxbI%2bY8CH%2bhCf0yYeVhppwjkxo4iGCgCg2ETqNcikH5GWhJEt9J70GtKtGK3npGZocHc4od%2btHLsGA3geAd4VwUi%2fmX7pvzLcL8%2f%2b; pc:browserecord:876326=h9kwqmCZkwMMuk21LM4JMnUS5vavaPBJ4tAUaucMqMfw; zhtxsvckey=lMJozXeYwk1W3EakZqwMUw9Wg5b2EYBLvasBbbsbr4PjSHluv7Z9jRxWPqOrButSzX4T782%2fd15cHa05Ng%2fZUgDJQ2s4hhD0wMEepdSJoCsn3%2fqSgViA7%2frEM%2bO0ERRT4Kv739UeB%2f%2fWVWiccZB6YdnQ4C52NFTn; zhtxnewfwz=SB80aqwOtnvUEubvCAPFnA==; zhtxsvcproject=lMJowmXT6GcF9AfBKJZCfDlQkYH8GeA44Ih8MJBc5bO0YQ1EyJQyihdMFOHaP4t0zGAW9pSoKX1uHKg2GAX0LmrFXX0CpB2AxLBD5NW5%2bjkl54z1hFj88%2bSBLJ%2bdNhNI7PvY5cIubeiCUCbAbccsGNnPqFtzehfifngBmk0StfmufOVNpdXHIy7D5HZxW44VfaITmLn9LyyeF7htUXyjbfKF1jPjkGi%2bwt7ciDKnBYuVFfae2FLPf5iD6cJCddpyZkJ5vmwOkBHZEZc4ABVZ%2fVpfYNmoOUsl%2fjPPS8ZuAMsB6PTeGKvjGgVzaErPSj0UpG%2b0KwY%2bvWnUyWgqqCxupTIdqy%2fRqFi6cy4Jt%2f5F3qJ5f2oGG9CkN1DlEIFV%2f3F1f%2b0oDwz8P%2bGQtnHQGzZg4CD30iSC65Oex%2fo%2fX38O%2fkEeG6HxOfOzDl%2fQx1YkJOx6Ato%2frUVE5Drhc1PLGL8UN%2fThkKgbXlmUMdM9JEkz5W77fPtKLkHKvfvvavQw0x4%2bmMjAoZ%2fRcWWrjDikWE1Wy%2f2x3VwtSCBv5v50RlhA8D%2b7ySTrYTjhxP5%2bDjkk8lqPhSMPqZIIoi5l3xfXsvYij5jhG%2fYh0iC5haRDOmhsQlxfQYceQz0kE%2b0g2Q%2b7V7YCFXPH%2bw7Mpc44PInnDWwW7pjZ%2fynfxsl6tMA2jkyohevJkYDMZ56uwMZY0juTSXBNe%2bmr92naQ4dUzaz38qSuTALOjiOMpX6doaW1Sos%2f42KTXZoRNRleltZk21AUXIhV2zqhSFldmDRKe4miBVt7dbdoMCjfZ7V1FuIWI2Of1pglqi6ZLOLfw8vomiDhRVrRW%2fkwuedhS9HWqtG6EzsdDF%2bc0YEAHt5qTfQCCMhbCNnY3bUlb8z3njWOgDIbUz161D0dgryMGhnjwEH4K9zgDK71i40C0%2f72H4jubbXXmVs%2fdUsFq5%2byK7cNAlJAUo1Q13P%2fiH3L4jPgepTKOUshUON1RiwZSpyWwm%2fRPZitsocmblILWkdcd7u1svPcsnlSEKqN9zfQKjtN4%2flFZ%2bgYFnTMB8oGVdiVcLD26TrIIAfShLsRqlDQxl7G; zhtxfwzlogintime=hohv7SCYxxIH%2fA%3d%3d; gr_session_id_96df24f07db1c09e=a141fad9-2ddf-43f8-9f10-e6ce01f33939 </stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded </stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">70</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="供货商发货" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="order_child_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">${__property(orderid)}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">order_child_id</stringProp>
                  </elementProp>
                  <elementProp name="orderNumber" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">${__property(orderNumber)}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">orderNumber</stringProp>
                  </elementProp>
                  <elementProp name="is_history" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">is_history</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">ghsn.zhanghetianxia.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/order/sendorder</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">log.info(&quot;${orderNumber}&quot;);
log.info(&quot;${orderid}&quot;);</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="108417">msg</stringProp>
                  <stringProp name="799375">成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="线下支付订单发货" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">ghsn.zhanghetianxia.com</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:43.0) Gecko/20100101 Firefox/43.0 </stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/* </stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate </stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://ghs.zhanghetianxia.com/order/list?ignoreTab=1 </stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Cookie</stringProp>
                  <stringProp name="Header.value">gr_user_id=bb2cc682-be69-4359-801d-9a5823b13274; zhtxghslogintime=hLZz4yP941M%3d; JSESSIONID=BCC733E1ACCFE9C52B865B5E174EE860; zhtxsptproject=lMJowmXT6GcF9AfBKJZCfDlQkYH8GeA44Ih8MJBc5bO0YQ1EyJQyihdMFOHUGZ9qy1oOoJXLIVZgHIY5EAfCKmjBQTgYuFP9vtwX8aeyonhw%2b8H6um6Qxu%2bZAPDGPixG47j%2b5cIuV%2fWIZXqYO7gjdomx4C9welLiEx0illUQrNnQYLcct4L%2bDDn%2bm3ZxW9MUfqIb5JGMDjibLpFHF0bQSMyR4zXSz1qmiYWPiyWcXP3wJvClijvvJ7j369YCHNlxQG1w7WY0vxn7ddw4ABVI8UkEcpX%2fYFEKrmjoTaZlEL0O5MHZLqzeZxpFRUKdYA8MomG6HBohkEbR1zwVrhRBrRY1hjfHxF%2bzWhlOu%2bxH94UDXXYoHqGSV3TJFaVZyHNaY5E%2fXyTwPNSRhBeGO1RE3DWM6w6ku6jZgdY9CX8Ly04PN63hRuKiG03duEIMP7oLIvppv35C4RGQLQfZG6sWUt7unZIGOROraOMOBkIzxnj5XcxrDVXSuMi0G%2bsN1V1%2fi9e%2bi%2brxYU2wqjr%2bexZk%2bNiSgHwJW1xdh%2bwiMEEjgzDvxS%2f6Vjb73MxmMEM%2fnVu85lhYoKx5hyprjmnggdpy%2bKzoC8Yq0WS%2fm4N4DFNXa0JXLcQvNnpiCbYp5hTmP7k%2bMXWhqSCaqeYRCo72EVMV7Lbi0hfy%2fZZlupcpwU%2bhg8TX8%2f7IVPaih7A3t1O%2fCHRsIee2%2bjSJSNch286vwIf5bRDR%2bRH%2bxEfX0L%2bRYsotx2e%2bQqdNRhhUkd4ywnsLb9RB2ya9PlVa9zVdHYO7B2xULIU8ZyrjE7d%2bELgxCQuvmMky0SnRc9zz4oKd2VjsV1v%2bEa48gMRgReeJv4DFIxwdGniV349SYI5TY6EdA7oNIsHD0JQzSM6gtgKOqHd%2fQ0B4wmYshrzbJhPawyH9JKjqHuH1q%2fwDxa%2bSF%2bqxSZnLsgIzDWkegJGgIIAFU3B5fJ1UylHq3BDsvjvOYqvNdQ1xRO9KfjM5F5zvkVyyfJ2%2b94YeVn0MGGgiDr648NL9wWozb4n8qgfuenB%2f8eRqQe97Nk%2b9PLQwbqStOoTEmDmRa1%2f8hJs3yWaKpTjQHpXtKM365948iqgc3VRA5sYz%2fxEyuSk3bT4%3d; ghsnewjava=2SBKL3yAuwJrDuLN8lmvaLcQ3h1ogo0VHqg1A6Y3dY4=; zhtxnewcs=tGvqHG0aKwlhjUsOSdB+SfekUbXVzhS/RX7yJRaX1FxQkjIPfKMGLbRTSh8k8lRO7+uj4hduIA0jCcj2ejNsFA==; zhtxgosproject=lMJowmXT6GcF9AfBKJZCfDlQkYH8GeA44Ih8MJBc5bO0YQ1EyJQyihdMFOHUGZ9qy1o0oZXLIVZgHIY5EAfCKmjBQTgYuFPxvOIb2K6xq31x0eyG31yr3eOzN9%2bLG25Z66Kb6%2bMdGqKVAHyIO5R7RZn3qylFc1X0LT0VzVoyhN6HYfYdhIClCmD45ENlfLEgQsMq7v%2bGBACRVa4mM3LoRJ2t12rjqFi14%2fS8jj%2btdYjzDNmXix3kAbKI9eh3AvphcmNu63JC6CztVt0SUSop%2b3sURtWcUlIKmDH6D9B4KcgTsuyoU4nbPw1ZR1m3TDsptnS%2fKTA4ryazxS1vvk1zqR9i6Qb22lqieyU1qb9M67MjUQR5Oqq2KXafKcMr0X5bRsNbayjuMrS2lAatXFB3%2bij35xmXqvOa4v1dIz8y2mgmKLPlIO3BfX77vF4SIL1fNaYwnhRAtg3Ie2nVPYhvFdCapo9bIXGwTNNzBnM72AnYYd9vF0PHxPzsV%2f84hTEckavpvqHnY1KmiQPTY2JXr%2fSM0nF7S0N9zcxHPSEvuAra0RLhaA%2fBhdN6JDwB7iKw5kwfrIUqjxJ511Thp9IfrqfkOMBil3SOlatGHElnXkJJQYcaQ1VOAI1S0BuCR9oeL3W65Q6Mns4RAZyODXEvw%2b3a0hz73usWx54msxr22snfruDPFem3jbFR%2bnONAEIhIMqOhWjqRckP3ueG%2feT9XATJ%2fBzj0wafra6meL5AuGvOOJNdDnJFmZUko2AgSNVK3A3vDG5Lmyh5H4GWa3x7NI0UGA%2bdD7Yma4cENiiPxJg%2fmS6iVpS5xuuKjXDEJRzXYdYp9cFyR8irgL%2bTPT4AE36l8oUBNv5Kaq4eBqVpKoDHxbI%2bY8CH%2bhCf0yYeVhppwjkxo4iGCgCg2ETqNcikH5GWhJEt9J70GtKtGK3npGZocHc4od%2btHLsGA3geAd4VwUi%2fmX7pvzLcL8%2f%2b; pc:browserecord:876326=h9kwqmCZkwMMuk21LM4JMnUS5vavaPBJ4tAUaucMqMfw; zhtxsvckey=lMJozXeYwk1W3EakZqwMUw9Wg5b2EYBLvasBbbsbr4PjSHluv7Z9jRxWPqOrButSzX4T782%2fd15cHa05Ng%2fZUgDJQ2s4hhD0wMEepdSJoCsn3%2fqSgViA7%2frEM%2bO0ERRT4Kv739UeB%2f%2fWVWiccZB6YdnQ4C52NFTn; zhtxnewfwz=SB80aqwOtnvUEubvCAPFnA==; zhtxsvcproject=lMJowmXT6GcF9AfBKJZCfDlQkYH8GeA44Ih8MJBc5bO0YQ1EyJQyihdMFOHaP4t0zGAW9pSoKX1uHKg2GAX0LmrFXX0CpB2AxLBD5NW5%2bjkl54z1hFj88%2bSBLJ%2bdNhNI7PvY5cIubeiCUCbAbccsGNnPqFtzehfifngBmk0StfmufOVNpdXHIy7D5HZxW44VfaITmLn9LyyeF7htUXyjbfKF1jPjkGi%2bwt7ciDKnBYuVFfae2FLPf5iD6cJCddpyZkJ5vmwOkBHZEZc4ABVZ%2fVpfYNmoOUsl%2fjPPS8ZuAMsB6PTeGKvjGgVzaErPSj0UpG%2b0KwY%2bvWnUyWgqqCxupTIdqy%2fRqFi6cy4Jt%2f5F3qJ5f2oGG9CkN1DlEIFV%2f3F1f%2b0oDwz8P%2bGQtnHQGzZg4CD30iSC65Oex%2fo%2fX38O%2fkEeG6HxOfOzDl%2fQx1YkJOx6Ato%2frUVE5Drhc1PLGL8UN%2fThkKgbXlmUMdM9JEkz5W77fPtKLkHKvfvvavQw0x4%2bmMjAoZ%2fRcWWrjDikWE1Wy%2f2x3VwtSCBv5v50RlhA8D%2b7ySTrYTjhxP5%2bDjkk8lqPhSMPqZIIoi5l3xfXsvYij5jhG%2fYh0iC5haRDOmhsQlxfQYceQz0kE%2b0g2Q%2b7V7YCFXPH%2bw7Mpc44PInnDWwW7pjZ%2fynfxsl6tMA2jkyohevJkYDMZ56uwMZY0juTSXBNe%2bmr92naQ4dUzaz38qSuTALOjiOMpX6doaW1Sos%2f42KTXZoRNRleltZk21AUXIhV2zqhSFldmDRKe4miBVt7dbdoMCjfZ7V1FuIWI2Of1pglqi6ZLOLfw8vomiDhRVrRW%2fkwuedhS9HWqtG6EzsdDF%2bc0YEAHt5qTfQCCMhbCNnY3bUlb8z3njWOgDIbUz161D0dgryMGhnjwEH4K9zgDK71i40C0%2f72H4jubbXXmVs%2fdUsFq5%2byK7cNAlJAUo1Q13P%2fiH3L4jPgepTKOUshUON1RiwZSpyWwm%2fRPZitsocmblILWkdcd7u1svPcsnlSEKqN9zfQKjtN4%2flFZ%2bgYFnTMB8oGVdiVcLD26TrIIAfShLsRqlDQxl7G; zhtxfwzlogintime=hohv7SCYxxIH%2fA%3d%3d; gr_session_id_96df24f07db1c09e=a141fad9-2ddf-43f8-9f10-e6ce01f33939 </stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded </stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">70</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="供货商发货" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="order_child_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">${__property(orderid2)}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">order_child_id</stringProp>
                  </elementProp>
                  <elementProp name="orderNumber" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">${__property(orderNumber2)}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">orderNumber</stringProp>
                  </elementProp>
                  <elementProp name="is_history" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">is_history</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">ghsn.zhanghetianxia.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/order/sendorder</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="108417">msg</stringProp>
                  <stringProp name="799375">成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="搜索订单" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">order.zhanghetianxia.com</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:43.0) Gecko/20100101 Firefox/43.0 </stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate </stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://order.zhanghetianxia.com</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Cookie</stringProp>
                  <stringProp name="Header.value">gr_user_id=bb2cc682-be69-4359-801d-9a5823b13274; JSESSIONID=D5057DB76BF2B692358DCE3D0F03DC66; zhtxsptproject=lMJowmXT6GcF9AfBKJZCfDlQkYH8GeA44Ih8MJBc5bO0YQ1EyJQyihdMFOHUGZ9qy1oOoJXLIVZgHIY5EAfCKmjBQTgYuFP9vtwX8aeyonhw%2b8H6um6Qxu%2bZAPDGPixG47j%2b5cIuV%2fWIZXqYO7gjdomx4C9welLiEx0illUQrNnQYLcct4L%2bDDn%2bm3ZxW9MUfqIb5JGMDjibLpFHF0bQSMyR4zXSz1qmiYWPiyWcXP3wJvClijvvJ7j369YCHNlxQG1w7WY0vxn7ddw4ABVI8UkEcpX%2fYFEKrmjoTaZlEL0O5MHZLqzeZxpFRUKdYA8MomG6HBohkEbR1zwVrhRBrRY1hjfHxF%2bzWhlOu%2bxH94UDXXYoHqGSV3TJFaVZyHNaY5E%2fXyTwPNSRhBeGO1RE3DWM6w6ku6jZgdY9CX8Ly04PN63hRuKiG03duEIMP7oLIvppv35C4RGQLQfZG6sWUt7unZIGOROraOMOBkIzxnj5XcxrDVXSuMi0G%2bsN1V1%2fi9e%2bi%2brxYU2wqjr%2bexZk%2bNiSgHwJW1xdh%2bwiMEEjgzDvxS%2f6Vjb73MxmMEM%2fnVu85lhYoKx5hyprjmnggdpy%2bKzoC8Yq0WS%2fm4N4DFNXa0JXLcQvNnpiCbYp5hTmP7k%2bMXWhqSCaqeYRCo72EVMV7Lbi0hfy%2fZZlupcpwU%2bhg8TX8%2f7IVPaih7A3t1O%2fCHRsIee2%2bjSJSNch286vwIf5bRDR%2bRH%2bxEfX0L%2bRYsotx2e%2bQqdNRhhUkd4ywnsLb9RB2ya9PlVa9zVdHYO7B2xULIU8ZyrjE7d%2bELgxCQuvmMky0SnRc9zz4oKd2VjsV1v%2bEa48gMRgReeJv4DFIxwdGniV349SYI5TY6EdA7oNIsHD0JQzSM6gtgKOqHd%2fQ0B4wmYshrzbJhPawyH9JKjqHuH1q%2fwDxa%2bSF%2bqxSZnLsgIzDWkegJGgIIAFU3B5fJ1UylHq3BDsvjvOYqvNdQ1xRO9KfjM5F5zvkVyyfJ2%2b94YeVn0MGGgiDr648NL9wWozb4n8qgfuenB%2f8eRqQe97Nk%2b9PLQwbqStOoTEmDmRa1%2f8hJs3yWaKpTjQHpXtKM365948iqgc3VRA5sYz%2fxEyuSk3bT4%3d; ghsnewjava=2SBKL3yAuwJrDuLN8lmvaLcQ3h1ogo0VHqg1A6Y3dY4=; zhtxnewcs=tGvqHG0aKwlhjUsOSdB+SfekUbXVzhS/RX7yJRaX1FxQkjIPfKMGLbRTSh8k8lRO7+uj4hduIA0jCcj2ejNsFA==; zhtxgosproject=lMJowmXT6GcF9AfBKJZCfDlQkYH8GeA44Ih8MJBc5bO0YQ1EyJQyihdMFOHUGZ9qy1o0oZXLIVZgHIY5EAfCKmjBQTgYuFPxvOIb2K6xq31x0eyG31yr3eOzN9%2bLG25Z66Kb6%2bMdGqKVAHyIO5R7RZn3qylFc1X0LT0VzVoyhN6HYfYdhIClCmD45ENlfLEgQsMq7v%2bGBACRVa4mM3LoRJ2t12rjqFi14%2fS8jj%2btdYjzDNmXix3kAbKI9eh3AvphcmNu63JC6CztVt0SUSop%2b3sURtWcUlIKmDH6D9B4KcgTsuyoU4nbPw1ZR1m3TDsptnS%2fKTA4ryazxS1vvk1zqR9i6Qb22lqieyU1qb9M67MjUQR5Oqq2KXafKcMr0X5bRsNbayjuMrS2lAatXFB3%2bij35xmXqvOa4v1dIz8y2mgmKLPlIO3BfX77vF4SIL1fNaYwnhRAtg3Ie2nVPYhvFdCapo9bIXGwTNNzBnM72AnYYd9vF0PHxPzsV%2f84hTEckavpvqHnY1KmiQPTY2JXr%2fSM0nF7S0N9zcxHPSEvuAra0RLhaA%2fBhdN6JDwB7iKw5kwfrIUqjxJ511Thp9IfrqfkOMBil3SOlatGHElnXkJJQYcaQ1VOAI1S0BuCR9oeL3W65Q6Mns4RAZyODXEvw%2b3a0hz73usWx54msxr22snfruDPFem3jbFR%2bnONAEIhIMqOhWjqRckP3ueG%2feT9XATJ%2fBzj0wafra6meL5AuGvOOJNdDnJFmZUko2AgSNVK3A3vDG5Lmyh5H4GWa3x7NI0UGA%2bdD7Yma4cENiiPxJg%2fmS6iVpS5xuuKjXDEJRzXYdYp9cFyR8irgL%2bTPT4AE36l8oUBNv5Kaq4eBqVpKoDHxbI%2bY8CH%2bhCf0yYeVhppwjkxo4iGCgCg2ETqNcikH5GWhJEt9J70GtKtGK3npGZocHc4od%2btHLsGA3geAd4VwUi%2fmX7pvzLcL8%2f%2b; pc:browserecord:876326=h9kwqmCZkwMMuk21LM4JMnUS5vavaPBJ4tAUaucMqMfw; zhtxsvckey=lMJozXeYwk1W3EakZqwMUw9Wg5b2EYBLvasBbbsbr4PjSHluv7Z9jRxWPqOrButSzX4T782%2fd15cHa05Ng%2fZUgDJQ2s4hhD0wMEepdSJoCsn3%2fqSgViA7%2frEM%2bO0ERRT4Kv739UeB%2f%2fWVWiccZB6YdnQ4C52NFTn; zhtxnewfwz=SB80aqwOtnvUEubvCAPFnA==; zhtxsvcproject=lMJowmXT6GcF9AfBKJZCfDlQkYH8GeA44Ih8MJBc5bO0YQ1EyJQyihdMFOHaP4t0zGAW9pSoKX1uHKg2GAX0LmrFXX0CpB2AxLBD5NW5%2bjkl54z1hFj88%2bSBLJ%2bdNhNI7PvY5cIubeiCUCbAbccsGNnPqFtzehfifngBmk0StfmufOVNpdXHIy7D5HZxW44VfaITmLn9LyyeF7htUXyjbfKF1jPjkGi%2bwt7ciDKnBYuVFfae2FLPf5iD6cJCddpyZkJ5vmwOkBHZEZc4ABVZ%2fVpfYNmoOUsl%2fjPPS8ZuAMsB6PTeGKvjGgVzaErPSj0UpG%2b0KwY%2bvWnUyWgqqCxupTIdqy%2fRqFi6cy4Jt%2f5F3qJ5f2oGG9CkN1DlEIFV%2f3F1f%2b0oDwz8P%2bGQtnHQGzZg4CD30iSC65Oex%2fo%2fX38O%2fkEeG6HxOfOzDl%2fQx1YkJOx6Ato%2frUVE5Drhc1PLGL8UN%2fThkKgbXlmUMdM9JEkz5W77fPtKLkHKvfvvavQw0x4%2bmMjAoZ%2fRcWWrjDikWE1Wy%2f2x3VwtSCBv5v50RlhA8D%2b7ySTrYTjhxP5%2bDjkk8lqPhSMPqZIIoi5l3xfXsvYij5jhG%2fYh0iC5haRDOmhsQlxfQYceQz0kE%2b0g2Q%2b7V7YCFXPH%2bw7Mpc44PInnDWwW7pjZ%2fynfxsl6tMA2jkyohevJkYDMZ56uwMZY0juTSXBNe%2bmr92naQ4dUzaz38qSuTALOjiOMpX6doaW1Sos%2f42KTXZoRNRleltZk21AUXIhV2zqhSFldmDRKe4miBVt7dbdoMCjfZ7V1FuIWI2Of1pglqi6ZLOLfw8vomiDhRVrRW%2fkwuedhS9HWqtG6EzsdDF%2bc0YEAHt5qTfQCCMhbCNnY3bUlb8z3njWOgDIbUz161D0dgryMGhnjwEH4K9zgDK71i40C0%2f72H4jubbXXmVs%2fdUsFq5%2byK7cNAlJAUo1Q13P%2fiH3L4jPgepTKOUshUON1RiwZSpyWwm%2fRPZitsocmblILWkdcd7u1svPcsnlSEKqN9zfQKjtN4%2flFZ%2bgYFnTMB8oGVdiVcLD26TrIIAfShLsRqlDQxl7G; gr_session_id_96df24f07db1c09e=94b1d59c-30dd-4b74-a5b5-939e7fe37e0c; zhtxghslogintime=hLZz4yP941M%3d </stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded </stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">245</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="搜索订单--线上" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="cancleId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">cancleId</stringProp>
                  </elementProp>
                  <elementProp name="cancleOrderId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">cancleOrderId</stringProp>
                  </elementProp>
                  <elementProp name="remarks" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">支付遇到问题</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">remarks</stringProp>
                  </elementProp>
                  <elementProp name="recycleSelect" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">recycleSelect</stringProp>
                  </elementProp>
                  <elementProp name="page_index" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">page_index</stringProp>
                  </elementProp>
                  <elementProp name="is_del" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">is_del</stringProp>
                  </elementProp>
                  <elementProp name="is_history" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">is_history</stringProp>
                  </elementProp>
                  <elementProp name="goods_ids" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">goods_ids</stringProp>
                  </elementProp>
                  <elementProp name="goods_counts" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">goods_counts</stringProp>
                  </elementProp>
                  <elementProp name="begin_time_str" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">begin_time_str</stringProp>
                  </elementProp>
                  <elementProp name="begin_time_end_str" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">begin_time_end_str</stringProp>
                  </elementProp>
                  <elementProp name="status" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">-1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">status</stringProp>
                  </elementProp>
                  <elementProp name="search_keyword" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${__property(orderNumber)}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">search_keyword</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">order.zhanghetianxia.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/order/listdo</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">orderid</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;input name=&quot;(.*?)&quot; type=&quot;hidden&quot; value=&quot;1&quot;/&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters">${orderid}</stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">${__setProperty(orderid,${orderid})};
log.info(&quot;${orderid}&quot;);
</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="35034724">订单号</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="搜索订单--线下" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="cancleId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">cancleId</stringProp>
                  </elementProp>
                  <elementProp name="cancleOrderId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">cancleOrderId</stringProp>
                  </elementProp>
                  <elementProp name="remarks" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">remarks</stringProp>
                  </elementProp>
                  <elementProp name="recycleSelect" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">recycleSelect</stringProp>
                  </elementProp>
                  <elementProp name="page_index" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">page_index</stringProp>
                  </elementProp>
                  <elementProp name="is_del" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">is_del</stringProp>
                  </elementProp>
                  <elementProp name="is_history" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">is_history</stringProp>
                  </elementProp>
                  <elementProp name="goods_ids" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">goods_ids</stringProp>
                  </elementProp>
                  <elementProp name="goods_counts" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">goods_counts</stringProp>
                  </elementProp>
                  <elementProp name="begin_time_str" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">begin_time_str</stringProp>
                  </elementProp>
                  <elementProp name="begin_time_end_str" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">begin_time_end_str</stringProp>
                  </elementProp>
                  <elementProp name="status" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">-1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">status</stringProp>
                  </elementProp>
                  <elementProp name="search_keyword" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${__property(orderNumber2)}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">search_keyword</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">order.zhanghetianxia.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/order/listdo</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">orderid2</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;input name=&quot;(.*?)&quot; type=&quot;hidden&quot; value=&quot;1&quot;/&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters">${orderid}</stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">${__setProperty(orderid2,${orderid2})};
log.info(&quot;${orderid2}&quot;);
</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="35034724">订单号</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="修改订单时间" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
              <boolProp name="autocommit">true</boolProp>
              <stringProp name="checkQuery">Select 1</stringProp>
              <stringProp name="connectionAge">5000</stringProp>
              <stringProp name="dataSource">192.168.200.50</stringProp>
              <stringProp name="dbUrl">jdbc:mysql://192.168.200.50:31306/prdorddb</stringProp>
              <stringProp name="driver">com.mysql.jdbc.Driver</stringProp>
              <boolProp name="keepAlive">true</boolProp>
              <stringProp name="password">5PbLAYC%sd</stringProp>
              <stringProp name="poolMax">10</stringProp>
              <stringProp name="timeout">10000</stringProp>
              <stringProp name="transactionIsolation">DEFAULT</stringProp>
              <stringProp name="trimInterval">60000</stringProp>
              <stringProp name="username">prdordusrc</stringProp>
            </JDBCDataSource>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询订单" enabled="true">
              <stringProp name="dataSource">192.168.200.50</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select * from order_childs where child_order_no=&apos;${__property(orderNumber)}&apos;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="修改订单创建时间" enabled="true">
              <stringProp name="dataSource">192.168.200.50</stringProp>
              <stringProp name="query">update order_childs set create_time=date_sub(create_time, interval 1 hour) where child_order_no=&apos;${__property(orderNumber)}&apos; and ss_id in(4,73)</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1329970139">1 updates</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="确认收货" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">order.zhanghetianxia.com</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:43.0) Gecko/20100101 Firefox/43.0 </stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate </stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://order.zhanghetianxia.com</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Cookie</stringProp>
                  <stringProp name="Header.value">gr_user_id=bb2cc682-be69-4359-801d-9a5823b13274; JSESSIONID=D5057DB76BF2B692358DCE3D0F03DC66; zhtxsptproject=lMJowmXT6GcF9AfBKJZCfDlQkYH8GeA44Ih8MJBc5bO0YQ1EyJQyihdMFOHUGZ9qy1oOoJXLIVZgHIY5EAfCKmjBQTgYuFP9vtwX8aeyonhw%2b8H6um6Qxu%2bZAPDGPixG47j%2b5cIuV%2fWIZXqYO7gjdomx4C9welLiEx0illUQrNnQYLcct4L%2bDDn%2bm3ZxW9MUfqIb5JGMDjibLpFHF0bQSMyR4zXSz1qmiYWPiyWcXP3wJvClijvvJ7j369YCHNlxQG1w7WY0vxn7ddw4ABVI8UkEcpX%2fYFEKrmjoTaZlEL0O5MHZLqzeZxpFRUKdYA8MomG6HBohkEbR1zwVrhRBrRY1hjfHxF%2bzWhlOu%2bxH94UDXXYoHqGSV3TJFaVZyHNaY5E%2fXyTwPNSRhBeGO1RE3DWM6w6ku6jZgdY9CX8Ly04PN63hRuKiG03duEIMP7oLIvppv35C4RGQLQfZG6sWUt7unZIGOROraOMOBkIzxnj5XcxrDVXSuMi0G%2bsN1V1%2fi9e%2bi%2brxYU2wqjr%2bexZk%2bNiSgHwJW1xdh%2bwiMEEjgzDvxS%2f6Vjb73MxmMEM%2fnVu85lhYoKx5hyprjmnggdpy%2bKzoC8Yq0WS%2fm4N4DFNXa0JXLcQvNnpiCbYp5hTmP7k%2bMXWhqSCaqeYRCo72EVMV7Lbi0hfy%2fZZlupcpwU%2bhg8TX8%2f7IVPaih7A3t1O%2fCHRsIee2%2bjSJSNch286vwIf5bRDR%2bRH%2bxEfX0L%2bRYsotx2e%2bQqdNRhhUkd4ywnsLb9RB2ya9PlVa9zVdHYO7B2xULIU8ZyrjE7d%2bELgxCQuvmMky0SnRc9zz4oKd2VjsV1v%2bEa48gMRgReeJv4DFIxwdGniV349SYI5TY6EdA7oNIsHD0JQzSM6gtgKOqHd%2fQ0B4wmYshrzbJhPawyH9JKjqHuH1q%2fwDxa%2bSF%2bqxSZnLsgIzDWkegJGgIIAFU3B5fJ1UylHq3BDsvjvOYqvNdQ1xRO9KfjM5F5zvkVyyfJ2%2b94YeVn0MGGgiDr648NL9wWozb4n8qgfuenB%2f8eRqQe97Nk%2b9PLQwbqStOoTEmDmRa1%2f8hJs3yWaKpTjQHpXtKM365948iqgc3VRA5sYz%2fxEyuSk3bT4%3d; ghsnewjava=2SBKL3yAuwJrDuLN8lmvaLcQ3h1ogo0VHqg1A6Y3dY4=; zhtxnewcs=tGvqHG0aKwlhjUsOSdB+SfekUbXVzhS/RX7yJRaX1FxQkjIPfKMGLbRTSh8k8lRO7+uj4hduIA0jCcj2ejNsFA==; zhtxgosproject=lMJowmXT6GcF9AfBKJZCfDlQkYH8GeA44Ih8MJBc5bO0YQ1EyJQyihdMFOHUGZ9qy1o0oZXLIVZgHIY5EAfCKmjBQTgYuFPxvOIb2K6xq31x0eyG31yr3eOzN9%2bLG25Z66Kb6%2bMdGqKVAHyIO5R7RZn3qylFc1X0LT0VzVoyhN6HYfYdhIClCmD45ENlfLEgQsMq7v%2bGBACRVa4mM3LoRJ2t12rjqFi14%2fS8jj%2btdYjzDNmXix3kAbKI9eh3AvphcmNu63JC6CztVt0SUSop%2b3sURtWcUlIKmDH6D9B4KcgTsuyoU4nbPw1ZR1m3TDsptnS%2fKTA4ryazxS1vvk1zqR9i6Qb22lqieyU1qb9M67MjUQR5Oqq2KXafKcMr0X5bRsNbayjuMrS2lAatXFB3%2bij35xmXqvOa4v1dIz8y2mgmKLPlIO3BfX77vF4SIL1fNaYwnhRAtg3Ie2nVPYhvFdCapo9bIXGwTNNzBnM72AnYYd9vF0PHxPzsV%2f84hTEckavpvqHnY1KmiQPTY2JXr%2fSM0nF7S0N9zcxHPSEvuAra0RLhaA%2fBhdN6JDwB7iKw5kwfrIUqjxJ511Thp9IfrqfkOMBil3SOlatGHElnXkJJQYcaQ1VOAI1S0BuCR9oeL3W65Q6Mns4RAZyODXEvw%2b3a0hz73usWx54msxr22snfruDPFem3jbFR%2bnONAEIhIMqOhWjqRckP3ueG%2feT9XATJ%2fBzj0wafra6meL5AuGvOOJNdDnJFmZUko2AgSNVK3A3vDG5Lmyh5H4GWa3x7NI0UGA%2bdD7Yma4cENiiPxJg%2fmS6iVpS5xuuKjXDEJRzXYdYp9cFyR8irgL%2bTPT4AE36l8oUBNv5Kaq4eBqVpKoDHxbI%2bY8CH%2bhCf0yYeVhppwjkxo4iGCgCg2ETqNcikH5GWhJEt9J70GtKtGK3npGZocHc4od%2btHLsGA3geAd4VwUi%2fmX7pvzLcL8%2f%2b; pc:browserecord:876326=h9kwqmCZkwMMuk21LM4JMnUS5vavaPBJ4tAUaucMqMfw; zhtxsvckey=lMJozXeYwk1W3EakZqwMUw9Wg5b2EYBLvasBbbsbr4PjSHluv7Z9jRxWPqOrButSzX4T782%2fd15cHa05Ng%2fZUgDJQ2s4hhD0wMEepdSJoCsn3%2fqSgViA7%2frEM%2bO0ERRT4Kv739UeB%2f%2fWVWiccZB6YdnQ4C52NFTn; zhtxnewfwz=SB80aqwOtnvUEubvCAPFnA==; zhtxsvcproject=lMJowmXT6GcF9AfBKJZCfDlQkYH8GeA44Ih8MJBc5bO0YQ1EyJQyihdMFOHaP4t0zGAW9pSoKX1uHKg2GAX0LmrFXX0CpB2AxLBD5NW5%2bjkl54z1hFj88%2bSBLJ%2bdNhNI7PvY5cIubeiCUCbAbccsGNnPqFtzehfifngBmk0StfmufOVNpdXHIy7D5HZxW44VfaITmLn9LyyeF7htUXyjbfKF1jPjkGi%2bwt7ciDKnBYuVFfae2FLPf5iD6cJCddpyZkJ5vmwOkBHZEZc4ABVZ%2fVpfYNmoOUsl%2fjPPS8ZuAMsB6PTeGKvjGgVzaErPSj0UpG%2b0KwY%2bvWnUyWgqqCxupTIdqy%2fRqFi6cy4Jt%2f5F3qJ5f2oGG9CkN1DlEIFV%2f3F1f%2b0oDwz8P%2bGQtnHQGzZg4CD30iSC65Oex%2fo%2fX38O%2fkEeG6HxOfOzDl%2fQx1YkJOx6Ato%2frUVE5Drhc1PLGL8UN%2fThkKgbXlmUMdM9JEkz5W77fPtKLkHKvfvvavQw0x4%2bmMjAoZ%2fRcWWrjDikWE1Wy%2f2x3VwtSCBv5v50RlhA8D%2b7ySTrYTjhxP5%2bDjkk8lqPhSMPqZIIoi5l3xfXsvYij5jhG%2fYh0iC5haRDOmhsQlxfQYceQz0kE%2b0g2Q%2b7V7YCFXPH%2bw7Mpc44PInnDWwW7pjZ%2fynfxsl6tMA2jkyohevJkYDMZ56uwMZY0juTSXBNe%2bmr92naQ4dUzaz38qSuTALOjiOMpX6doaW1Sos%2f42KTXZoRNRleltZk21AUXIhV2zqhSFldmDRKe4miBVt7dbdoMCjfZ7V1FuIWI2Of1pglqi6ZLOLfw8vomiDhRVrRW%2fkwuedhS9HWqtG6EzsdDF%2bc0YEAHt5qTfQCCMhbCNnY3bUlb8z3njWOgDIbUz161D0dgryMGhnjwEH4K9zgDK71i40C0%2f72H4jubbXXmVs%2fdUsFq5%2byK7cNAlJAUo1Q13P%2fiH3L4jPgepTKOUshUON1RiwZSpyWwm%2fRPZitsocmblILWkdcd7u1svPcsnlSEKqN9zfQKjtN4%2flFZ%2bgYFnTMB8oGVdiVcLD26TrIIAfShLsRqlDQxl7G; gr_session_id_96df24f07db1c09e=94b1d59c-30dd-4b74-a5b5-939e7fe37e0c; zhtxghslogintime=hLZz4yP941M%3d </stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded </stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">23</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="确认收货--线上" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="order_child_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${__property(orderid)}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">order_child_id</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">order.zhanghetianxia.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/order/okreceived</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="799375">成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <PoissonRandomTimer guiclass="PoissonRandomTimerGui" testclass="PoissonRandomTimer" testname="Poisson Random Timer" enabled="false">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">100</stringProp>
            </PoissonRandomTimer>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
              <stringProp name="TestPlan.comments">实际间隔是1000</stringProp>
              <stringProp name="ConstantTimer.delay">3000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="确认收货--线下" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="order_child_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${__property(orderid2)}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">order_child_id</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">order.zhanghetianxia.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/order/okreceived</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="799375">成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
